{"ast":null,"code":"var toPoints = function toPoints(letterGrade) {\n  switch (letterGrade) {\n    case \"A\":\n      return 4;\n\n    case \"B\":\n      return 3;\n\n    case \"C\":\n      return 2;\n\n    case \"D\":\n      return 1;\n\n    case \"F\":\n      return 0;\n\n    default:\n      throw new Error(\"Unexpected letter grade: \".concat(letterGrade));\n  }\n};\n\nvar calculateGPA = function calculateGPA() {\n  var numGrades = arguments.length;\n  var gradePointSum = 0; // convert each letter grade to points from 0 to 4.\n\n  for (var i = 0; i < arguments.length; i++) {\n    var letterGrade = i < 0 || arguments.length <= i ? undefined : arguments[i]; // if any letter grades are null, return early with null.\n\n    if (letterGrade === null) {\n      return null;\n    }\n\n    var points = toPoints(letterGrade);\n    gradePointSum += points;\n  } // average the points from each letter grade.\n\n\n  return gradePointSum / numGrades;\n};\n\nexport default calculateGPA;","map":{"version":3,"sources":["/home/michael/code/chavez-hs-planner/src/shared/util/calculate-gpa.ts"],"names":["toPoints","letterGrade","Error","calculateGPA","numGrades","length","gradePointSum","i","points"],"mappings":"AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,WAAD,EAAyB;AACxC,UAAOA,WAAP;AACE,SAAK,GAAL;AACE,aAAO,CAAP;;AACF,SAAK,GAAL;AACE,aAAO,CAAP;;AACF,SAAK,GAAL;AACE,aAAO,CAAP;;AACF,SAAK,GAAL;AACE,aAAO,CAAP;;AACF,SAAK,GAAL;AACE,aAAO,CAAP;;AACF;AACE,YAAM,IAAIC,KAAJ,oCAAsCD,WAAtC,EAAN;AAZJ;AAcD,CAfD;;AAkBA,IAAME,YAAY,GAAG,SAAfA,YAAe,GAA2D;AAC9E,MAAMC,SAAS,GAAG,UAAaC,MAA/B;AACA,MAAIC,aAAa,GAAG,CAApB,CAF8E,CAI9E;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAG,UAAaF,MAA/B,EAAuCE,CAAC,EAAxC,EAA4C;AAC1C,QAAMN,WAAW,GAAgBM,CAAhB,4BAAgBA,CAAhB,yBAAgBA,CAAhB,CAAjB,CAD0C,CAG1C;;AACA,QAAIN,WAAW,KAAK,IAApB,EAA0B;AACxB,aAAO,IAAP;AACD;;AAED,QAAMO,MAAM,GAAGR,QAAQ,CAACC,WAAD,CAAvB;AACAK,IAAAA,aAAa,IAAIE,MAAjB;AACD,GAf6E,CAgB9E;;;AACA,SAAOF,aAAa,GAAGF,SAAvB;AACD,CAlBD;;AAoBA,eAAeD,YAAf","sourcesContent":["import { LetterGrade } from \"../../shared/types\";\n\nconst toPoints = (letterGrade): number => {\n  switch(letterGrade){\n    case \"A\":\n      return 4;\n    case \"B\":\n      return 3;\n    case \"C\":\n      return 2;\n    case \"D\":\n      return 1;\n    case \"F\":\n      return 0;\n    default:\n      throw new Error(`Unexpected letter grade: ${letterGrade}`);\n  }\n}\n\ntype NullableLetterGrade = LetterGrade | null\nconst calculateGPA = (...letterGrades: NullableLetterGrade[]): number | null => {\n  const numGrades = letterGrades.length;\n  let gradePointSum = 0;\n  \n  // convert each letter grade to points from 0 to 4.\n  for (let i=0; i < letterGrades.length; i++) {\n    const letterGrade = letterGrades[i];\n\n    // if any letter grades are null, return early with null.\n    if (letterGrade === null) {\n      return null;\n    }\n\n    const points = toPoints(letterGrade);\n    gradePointSum += points;\n  }\n  // average the points from each letter grade.\n  return gradePointSum / numGrades;\n};\n\nexport default calculateGPA;\n"]},"metadata":{},"sourceType":"module"}