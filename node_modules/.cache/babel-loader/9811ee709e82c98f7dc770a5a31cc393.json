{"ast":null,"code":"import { SuccessChance } from \"../../../shared/enums\";\nimport { getOverallSuccessChance } from \"../../../shared/util/get-overall-success-chance\";\nexport var createProgramOutcomeDictionary = function createProgramOutcomeDictionary(studentData, programDict) {\n  var outcomeDict = {};\n  Object.keys(programDict).forEach(function (programID) {\n    var program = programDict[programID];\n    var applicationChance = program.applicationReqFn(studentData, program);\n    var selectionChance = program.selectionReqFn(studentData, program);\n    var outcome = {\n      programID: programID,\n      applicationChance: applicationChance,\n      selectionChance: selectionChance,\n      overallChance: getOverallSuccessChance({\n        application: applicationChance,\n        selection: selectionChance\n      })\n    };\n    outcomeDict[programID] = outcome;\n  });\n  return outcomeDict;\n};\nexport var createInitialProgramOutcomeDictionary = function createInitialProgramOutcomeDictionary(programDict) {\n  var initialOutcomes = {};\n  Object.keys(programDict).forEach(function (programID) {\n    var outcome = {\n      programID: programID,\n      applicationChance: SuccessChance.NOTIMPLEMENTED,\n      selectionChance: SuccessChance.NOTIMPLEMENTED,\n      overallChance: SuccessChance.NOTIMPLEMENTED\n    };\n    initialOutcomes[programID] = outcome;\n  });\n  return initialOutcomes;\n};","map":{"version":3,"sources":["/home/michael/code/chavez-hs-planner/src/shared/redux/utils/create-program-outcome-dictionary.ts"],"names":["SuccessChance","getOverallSuccessChance","createProgramOutcomeDictionary","studentData","programDict","outcomeDict","Object","keys","forEach","programID","program","applicationChance","applicationReqFn","selectionChance","selectionReqFn","outcome","overallChance","application","selection","createInitialProgramOutcomeDictionary","initialOutcomes","NOTIMPLEMENTED"],"mappings":"AAOA,SAASA,aAAT,QAA8B,uBAA9B;AAEA,SAASC,uBAAT,QAAwC,iDAAxC;AAEA,OAAO,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,WAAD,EAA2BC,WAA3B,EAAwF;AACpI,MAAIC,WAAqC,GAAG,EAA5C;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,OAAzB,CAAkC,UAAAC,SAAS,EAAI;AAC7C,QAAMC,OAAO,GAAGN,WAAW,CAACK,SAAD,CAA3B;AACA,QAAME,iBAAiB,GAAGD,OAAO,CAACE,gBAAR,CAAyBT,WAAzB,EAAsCO,OAAtC,CAA1B;AACA,QAAMG,eAAe,GAAGH,OAAO,CAACI,cAAR,CAAuBX,WAAvB,EAAoCO,OAApC,CAAxB;AACA,QAAMK,OAAuB,GAAG;AAC9BN,MAAAA,SAAS,EAAEA,SADmB;AAE9BE,MAAAA,iBAAiB,EAAEA,iBAFW;AAG9BE,MAAAA,eAAe,EAAEA,eAHa;AAI9BG,MAAAA,aAAa,EAAEf,uBAAuB,CAAC;AAACgB,QAAAA,WAAW,EAAEN,iBAAd;AAAiCO,QAAAA,SAAS,EAAEL;AAA5C,OAAD;AAJR,KAAhC;AAMAR,IAAAA,WAAW,CAACI,SAAD,CAAX,GAAyBM,OAAzB;AACD,GAXD;AAYA,SAAOV,WAAP;AACD,CAfM;AAiBP,OAAO,IAAMc,qCAAqC,GAAG,SAAxCA,qCAAwC,CAACf,WAAD,EAAoC;AACvF,MAAIgB,eAAe,GAAG,EAAtB;AACAd,EAAAA,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,OAAzB,CAAkC,UAAAC,SAAS,EAAI;AAC7C,QAAMM,OAAuB,GAAG;AAC9BN,MAAAA,SAAS,EAAEA,SADmB;AAE9BE,MAAAA,iBAAiB,EAAEX,aAAa,CAACqB,cAFH;AAG9BR,MAAAA,eAAe,EAAEb,aAAa,CAACqB,cAHD;AAI9BL,MAAAA,aAAa,EAAEhB,aAAa,CAACqB;AAJC,KAAhC;AAMAD,IAAAA,eAAe,CAACX,SAAD,CAAf,GAA6BM,OAA7B;AACD,GARD;AASA,SAAOK,eAAP;AACD,CAZM","sourcesContent":["import {\n  ProgramDictionary,\n  ProgramOutcome,\n  ProgramOutcomeDictionary,\n  StudentData\n} from \"../../../shared/types\";\n\nimport { SuccessChance } from \"../../../shared/enums\";\n\nimport { getOverallSuccessChance } from \"../../../shared/util/get-overall-success-chance\";\n\nexport const createProgramOutcomeDictionary = (studentData: StudentData, programDict: ProgramDictionary): ProgramOutcomeDictionary => {\n  let outcomeDict: ProgramOutcomeDictionary = {};\n  Object.keys(programDict).forEach( programID => {\n    const program = programDict[programID];\n    const applicationChance = program.applicationReqFn(studentData, program);\n    const selectionChance = program.selectionReqFn(studentData, program);\n    const outcome: ProgramOutcome = {\n      programID: programID,\n      applicationChance: applicationChance,\n      selectionChance: selectionChance,\n      overallChance: getOverallSuccessChance({application: applicationChance, selection: selectionChance})\n    }\n    outcomeDict[programID] = outcome;\n  });\n  return outcomeDict;\n};\n\nexport const createInitialProgramOutcomeDictionary = (programDict: ProgramDictionary) => {\n  let initialOutcomes = {};\n  Object.keys(programDict).forEach( programID => {\n    const outcome: ProgramOutcome = {\n      programID: programID,\n      applicationChance: SuccessChance.NOTIMPLEMENTED,\n      selectionChance: SuccessChance.NOTIMPLEMENTED,\n      overallChance: SuccessChance.NOTIMPLEMENTED\n    }\n    initialOutcomes[programID] = outcome;\n  });\n  return initialOutcomes;\n};\n"]},"metadata":{},"sourceType":"module"}