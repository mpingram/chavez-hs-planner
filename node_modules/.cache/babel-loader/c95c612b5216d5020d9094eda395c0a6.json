{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { updateStudentIEPStatus, updateStudentELLStatus, updateStudentAddress, updateStudentCurrESProgram, updateStudentSiblingHSSchools, updateStudentSkip7OrRepeated8 } from \"../../../shared/redux/actions\";\nimport StudentInfoForm from \"./student-info-form\";\n\nvar selectNonHSProgramDict = function selectNonHSProgramDict(state) {\n  return state.data.nonHSPrograms;\n};\n\nvar selectNonHSProgramOptions = createSelector([selectNonHSProgramDict], function (programDict) {\n  var options = [];\n  options.push({\n    value: \"%%none%%\",\n    label: \"Other\"\n  });\n  Object.keys(programDict).forEach(function (id) {\n    var program = programDict[id];\n    options.push({\n      value: program.id,\n      label: program.programName\n    });\n  });\n  return options;\n});\n\nvar selectHSSchoolDict = function selectHSSchoolDict(state) {\n  return state.data.hsSchools;\n};\n\nvar selectHSSchoolOptions = createSelector([selectHSSchoolDict], function (hsSchoolDict) {\n  var options = [];\n  Object.keys(hsSchoolDict).forEach(function (id) {\n    var school = hsSchoolDict[id];\n    options.push({\n      value: school.id,\n      label: school.shortName\n    });\n  });\n  return options;\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    addressIsLoading: state.loadingStatus.loadingTier,\n    currEsProgramOptions: selectNonHSProgramOptions(state),\n    siblingHSSchoolOptions: selectHSSchoolOptions(state),\n    iep: state.studentData.iep,\n    el: state.studentData.ell,\n    address: state.studentData.address,\n    tier: state.studentData.tier,\n    skip7OrRepeat8: state.studentData.skippedGrade7OrRepeatedGrade8,\n    currESProgram: state.studentData.currESProgramID,\n    siblingHSSchools: state.studentData.siblingHSSchoolIDs\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIEPChange: function onIEPChange(newVal) {\n      return dispatch(updateStudentIEPStatus(newVal));\n    },\n    onELChange: function onELChange(newVal) {\n      return dispatch(updateStudentELLStatus(newVal));\n    },\n    onAddressChange: function onAddressChange(newVal) {\n      return dispatch(updateStudentAddress(newVal));\n    },\n    onSkip7OrRepeat8Change: function onSkip7OrRepeat8Change(newVal) {\n      return dispatch(updateStudentSkip7OrRepeated8(newVal));\n    },\n    onCurrESProgramChange: function onCurrESProgramChange(newVal) {\n      return dispatch(updateStudentCurrESProgram(newVal));\n    },\n    onSiblingHSSchoolChange: function onSiblingHSSchoolChange(newVal) {\n      return dispatch(updateStudentSiblingHSSchools(newVal));\n    }\n  };\n};\n\nexport var StudentInfoFormContainer = connect(mapStateToProps, mapDispatchToProps)(StudentInfoForm);","map":{"version":3,"sources":["/home/michael/code/chavez-hs-planner/src/path-to-hs/components/student-info-display/student-info-form-container.tsx"],"names":["connect","createSelector","updateStudentIEPStatus","updateStudentELLStatus","updateStudentAddress","updateStudentCurrESProgram","updateStudentSiblingHSSchools","updateStudentSkip7OrRepeated8","StudentInfoForm","selectNonHSProgramDict","state","data","nonHSPrograms","selectNonHSProgramOptions","programDict","options","push","value","label","Object","keys","forEach","id","program","programName","selectHSSchoolDict","hsSchools","selectHSSchoolOptions","hsSchoolDict","school","shortName","mapStateToProps","addressIsLoading","loadingStatus","loadingTier","currEsProgramOptions","siblingHSSchoolOptions","iep","studentData","el","ell","address","tier","skip7OrRepeat8","skippedGrade7OrRepeatedGrade8","currESProgram","currESProgramID","siblingHSSchools","siblingHSSchoolIDs","mapDispatchToProps","dispatch","onIEPChange","newVal","onELChange","onAddressChange","onSkip7OrRepeat8Change","onCurrESProgramChange","onSiblingHSSchoolChange","StudentInfoFormContainer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SACEC,sBADF,EAEEC,sBAFF,EAGEC,oBAHF,EAIEC,0BAJF,EAKEC,6BALF,EAMEC,6BANF,QAOO,+BAPP;AAWA,OAAOC,eAAP,MAA4B,qBAA5B;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD;AAAA,SAAqBA,KAAK,CAACC,IAAN,CAAWC,aAAhC;AAAA,CAA/B;;AACA,IAAMC,yBAAyB,GAAGZ,cAAc,CAC9C,CAACQ,sBAAD,CAD8C,EAE9C,UAACK,WAAD,EAAiB;AACf,MAAIC,OAAc,GAAG,EAArB;AACAA,EAAAA,OAAO,CAACC,IAAR,CAAa;AAACC,IAAAA,KAAK,EAAE,UAAR;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GAAb;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYN,WAAZ,EAAyBO,OAAzB,CAAkC,UAAAC,EAAE,EAAI;AACtC,QAAMC,OAAO,GAAGT,WAAW,CAACQ,EAAD,CAA3B;AACAP,IAAAA,OAAO,CAACC,IAAR,CAAa;AACXC,MAAAA,KAAK,EAAEM,OAAO,CAACD,EADJ;AAEXJ,MAAAA,KAAK,EAAEK,OAAO,CAACC;AAFJ,KAAb;AAID,GAND;AAOA,SAAOT,OAAP;AACD,CAb6C,CAAhD;;AAgBA,IAAMU,kBAAkB,GAAG,SAArBA,kBAAqB,CAACf,KAAD;AAAA,SAAqBA,KAAK,CAACC,IAAN,CAAWe,SAAhC;AAAA,CAA3B;;AACA,IAAMC,qBAAqB,GAAG1B,cAAc,CAC1C,CAACwB,kBAAD,CAD0C,EAE1C,UAACG,YAAD,EAAkB;AAChB,MAAIb,OAAc,GAAG,EAArB;AACAI,EAAAA,MAAM,CAACC,IAAP,CAAYQ,YAAZ,EAA0BP,OAA1B,CAAmC,UAAAC,EAAE,EAAI;AACvC,QAAMO,MAAM,GAAGD,YAAY,CAACN,EAAD,CAA3B;AACAP,IAAAA,OAAO,CAACC,IAAR,CAAa;AACXC,MAAAA,KAAK,EAAEY,MAAM,CAACP,EADH;AAEXJ,MAAAA,KAAK,EAAEW,MAAM,CAACC;AAFH,KAAb;AAID,GAND;AAOA,SAAOf,OAAP;AACD,CAZyC,CAA5C;;AAeA,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CAACrB,KAAD,EAAqB;AAC3C,SAAO;AACLsB,IAAAA,gBAAgB,EAAEtB,KAAK,CAACuB,aAAN,CAAoBC,WADjC;AAELC,IAAAA,oBAAoB,EAAEtB,yBAAyB,CAACH,KAAD,CAF1C;AAGL0B,IAAAA,sBAAsB,EAAET,qBAAqB,CAACjB,KAAD,CAHxC;AAKL2B,IAAAA,GAAG,EAAE3B,KAAK,CAAC4B,WAAN,CAAkBD,GALlB;AAMLE,IAAAA,EAAE,EAAE7B,KAAK,CAAC4B,WAAN,CAAkBE,GANjB;AAOLC,IAAAA,OAAO,EAAE/B,KAAK,CAAC4B,WAAN,CAAkBG,OAPtB;AAQLC,IAAAA,IAAI,EAAEhC,KAAK,CAAC4B,WAAN,CAAkBI,IARnB;AASLC,IAAAA,cAAc,EAAEjC,KAAK,CAAC4B,WAAN,CAAkBM,6BAT7B;AAULC,IAAAA,aAAa,EAAEnC,KAAK,CAAC4B,WAAN,CAAkBQ,eAV5B;AAWLC,IAAAA,gBAAgB,EAAErC,KAAK,CAAC4B,WAAN,CAAkBU;AAX/B,GAAP;AAaD,CAdD;;AAgBA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLC,IAAAA,WAAW,EAAE,qBAAAC,MAAM;AAAA,aAAIF,QAAQ,CAAChD,sBAAsB,CAACkD,MAAD,CAAvB,CAAZ;AAAA,KADd;AAELC,IAAAA,UAAU,EAAE,oBAAAD,MAAM;AAAA,aAAIF,QAAQ,CAAC/C,sBAAsB,CAACiD,MAAD,CAAvB,CAAZ;AAAA,KAFb;AAGLE,IAAAA,eAAe,EAAE,yBAAAF,MAAM;AAAA,aAAIF,QAAQ,CAAC9C,oBAAoB,CAACgD,MAAD,CAArB,CAAZ;AAAA,KAHlB;AAILG,IAAAA,sBAAsB,EAAE,gCAAAH,MAAM;AAAA,aAAIF,QAAQ,CAAC3C,6BAA6B,CAAC6C,MAAD,CAA9B,CAAZ;AAAA,KAJzB;AAKLI,IAAAA,qBAAqB,EAAE,+BAAAJ,MAAM;AAAA,aAAIF,QAAQ,CAAC7C,0BAA0B,CAAC+C,MAAD,CAA3B,CAAZ;AAAA,KALxB;AAMLK,IAAAA,uBAAuB,EAAE,iCAAAL,MAAM;AAAA,aAAIF,QAAQ,CAAC5C,6BAA6B,CAAC8C,MAAD,CAA9B,CAAZ;AAAA;AAN1B,GAAP;AAQD,CATD;;AAWA,OAAO,IAAMM,wBAAwB,GAAG1D,OAAO,CAAC+B,eAAD,EAAkBkB,kBAAlB,CAAP,CAA6CzC,eAA7C,CAAjC","sourcesContent":["import { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport {\n  updateStudentIEPStatus,\n  updateStudentELLStatus,\n  updateStudentAddress,\n  updateStudentCurrESProgram,\n  updateStudentSiblingHSSchools,\n  updateStudentSkip7OrRepeated8,\n} from \"../../../shared/redux/actions\";\n\nimport { AppState } from \"../../../shared/types\";\n\nimport StudentInfoForm from \"./student-info-form\";\n\nconst selectNonHSProgramDict = (state: AppState) => state.data.nonHSPrograms;\nconst selectNonHSProgramOptions = createSelector(\n  [selectNonHSProgramDict],\n  (programDict) => {\n    let options: any[] = [];\n    options.push({value: \"%%none%%\", label: \"Other\"});\n    Object.keys(programDict).forEach( id => {\n      const program = programDict[id];\n      options.push({\n        value: program.id,\n        label: program.programName\n      });\n    });\n    return options;\n  }\n);\n\nconst selectHSSchoolDict = (state: AppState) => state.data.hsSchools;\nconst selectHSSchoolOptions = createSelector(\n  [selectHSSchoolDict],\n  (hsSchoolDict) => {\n    let options: any[] = [];\n    Object.keys(hsSchoolDict).forEach( id => {\n      const school = hsSchoolDict[id];\n      options.push({\n        value: school.id,\n        label: school.shortName\n      });\n    });\n    return options;\n  }\n);\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    addressIsLoading: state.loadingStatus.loadingTier,\n    currEsProgramOptions: selectNonHSProgramOptions(state),\n    siblingHSSchoolOptions: selectHSSchoolOptions(state),\n\n    iep: state.studentData.iep,\n    el: state.studentData.ell,\n    address: state.studentData.address,\n    tier: state.studentData.tier,\n    skip7OrRepeat8: state.studentData.skippedGrade7OrRepeatedGrade8,\n    currESProgram: state.studentData.currESProgramID,\n    siblingHSSchools: state.studentData.siblingHSSchoolIDs,\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIEPChange: newVal => dispatch(updateStudentIEPStatus(newVal)),\n    onELChange: newVal => dispatch(updateStudentELLStatus(newVal)),\n    onAddressChange: newVal => dispatch(updateStudentAddress(newVal)),\n    onSkip7OrRepeat8Change: newVal => dispatch(updateStudentSkip7OrRepeated8(newVal)),\n    onCurrESProgramChange: newVal => dispatch(updateStudentCurrESProgram(newVal)),\n    onSiblingHSSchoolChange: newVal => dispatch(updateStudentSiblingHSSchools(newVal))\n  }\n};\n\nexport const StudentInfoFormContainer = connect(mapStateToProps, mapDispatchToProps)(StudentInfoForm);\n"]},"metadata":{},"sourceType":"module"}