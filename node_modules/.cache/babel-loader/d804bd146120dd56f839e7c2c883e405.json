{"ast":null,"code":"import { pointSystem } from \"./point-system\";\n\nvar createIBPointCalc = function createIBPointCalc(ifInAttendBound) {\n  return function (student, program) {\n    // if any needed student data is null, return early with null\n    if (student.nweaPercentileMath === null || student.nweaPercentileRead === null || student.subjGradeMath === null || student.subjGradeRead === null || student.subjGradeSci === null || student.subjGradeSocStudies === null) {\n      return null;\n    }\n\n    var IB_NWEA_SCORE_CONSTANT = 2.2727;\n    var IB_ATTEND_BOUND_BONUS_PTS = 50; // calculate points for NWEA scores\n\n    var nweaMathPoints = Math.round(student.nweaPercentileMath * IB_NWEA_SCORE_CONSTANT);\n    var nweaReadPoints = Math.round(student.nweaPercentileRead * IB_NWEA_SCORE_CONSTANT); // calculate score component for subj grades\n\n    var gradePointsLookup = {\n      \"A\": 112.5,\n      \"B\": 75,\n      \"C\": 38,\n      \"D\": 0,\n      \"F\": 0\n    };\n    var subjGradeMathPoints = gradePointsLookup[student.subjGradeMath];\n    var subjGradeReadPoints = gradePointsLookup[student.subjGradeRead];\n    var subjGradeSciPoints = gradePointsLookup[student.subjGradeSci];\n    var subjGradeSocStudiesPoints = gradePointsLookup[student.subjGradeSocStudies]; // if student is in attendance bound of the IB program's school, the student gets a bonus\n    // TODO figure out what to do for schools without attendance bounds, like BACK OF THE YARDS HS\n\n    var attendBonus = ifInAttendBound(student, program) ? IB_ATTEND_BOUND_BONUS_PTS : 0;\n    var ibPoints = nweaMathPoints + nweaReadPoints + subjGradeMathPoints + subjGradeReadPoints + subjGradeSciPoints + subjGradeSocStudiesPoints + attendBonus;\n    return ibPoints;\n  };\n};\n\nvar createIBCutoffLookup = function createIBCutoffLookup(getCutoffDict) {\n  return function (student, program) {\n    var cutoff = getCutoffDict()[program.id];\n\n    if (cutoff === undefined) {\n      throw new Error(\"School \".concat(program.schoolNameLong, \" not found in IB Cutoff scores\"));\n    }\n\n    return cutoff;\n  };\n};\n\nexport var createIBPointSystem = function createIBPointSystem(getCutoffDict, ifInAttendBound) {\n  var ibPointCalc = createIBPointCalc(ifInAttendBound);\n  var ibCutoffLookup = createIBCutoffLookup(getCutoffDict);\n  return pointSystem(ibPointCalc, ibCutoffLookup);\n};","map":{"version":3,"sources":["/home/michael/code/chavez-hs-planner/src/shared/requirement-functions/requirement-function-builders/ib-point-system.ts"],"names":["pointSystem","createIBPointCalc","ifInAttendBound","student","program","nweaPercentileMath","nweaPercentileRead","subjGradeMath","subjGradeRead","subjGradeSci","subjGradeSocStudies","IB_NWEA_SCORE_CONSTANT","IB_ATTEND_BOUND_BONUS_PTS","nweaMathPoints","Math","round","nweaReadPoints","gradePointsLookup","subjGradeMathPoints","subjGradeReadPoints","subjGradeSciPoints","subjGradeSocStudiesPoints","attendBonus","ibPoints","createIBCutoffLookup","getCutoffDict","cutoff","id","undefined","Error","schoolNameLong","createIBPointSystem","ibPointCalc","ibCutoffLookup"],"mappings":"AAQA,SAASA,WAAT,QAA4B,gBAA5B;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,eAAD;AAAA,SAAkC,UAACC,OAAD,EAAuBC,OAAvB,EAA2D;AAErH;AACA,QAAID,OAAO,CAACE,kBAAR,KAA+B,IAA/B,IACFF,OAAO,CAACG,kBAAR,KAA+B,IAD7B,IAEFH,OAAO,CAACI,aAAR,KAA0B,IAFxB,IAGFJ,OAAO,CAACK,aAAR,KAA0B,IAHxB,IAIFL,OAAO,CAACM,YAAR,KAAyB,IAJvB,IAKFN,OAAO,CAACO,mBAAR,KAAgC,IALlC,EAKwC;AAEtC,aAAO,IAAP;AACD;;AAED,QAAMC,sBAAsB,GAAG,MAA/B;AACA,QAAMC,yBAAyB,GAAG,EAAlC,CAdqH,CAgBrH;;AACA,QAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWZ,OAAO,CAACE,kBAAR,GAA6BM,sBAAxC,CAAvB;AACA,QAAMK,cAAc,GAAGF,IAAI,CAACC,KAAL,CAAWZ,OAAO,CAACG,kBAAR,GAA6BK,sBAAxC,CAAvB,CAlBqH,CAoBrH;;AACA,QAAMM,iBAAiB,GAAG;AACxB,WAAK,KADmB;AAExB,WAAK,EAFmB;AAGxB,WAAK,EAHmB;AAIxB,WAAK,CAJmB;AAKxB,WAAK;AALmB,KAA1B;AAOA,QAAMC,mBAAmB,GAAGD,iBAAiB,CAACd,OAAO,CAACI,aAAT,CAA7C;AACA,QAAMY,mBAAmB,GAAGF,iBAAiB,CAACd,OAAO,CAACK,aAAT,CAA7C;AACA,QAAMY,kBAAkB,GAAGH,iBAAiB,CAACd,OAAO,CAACM,YAAT,CAA5C;AACA,QAAMY,yBAAyB,GAAGJ,iBAAiB,CAACd,OAAO,CAACO,mBAAT,CAAnD,CA/BqH,CAiCrH;AACA;;AACA,QAAMY,WAAW,GAAGpB,eAAe,CAACC,OAAD,EAAUC,OAAV,CAAf,GAAoCQ,yBAApC,GAAgE,CAApF;AAEA,QAAMW,QAAQ,GAAGV,cAAc,GAC7BG,cADe,GAEfE,mBAFe,GAGfC,mBAHe,GAIfC,kBAJe,GAKfC,yBALe,GAMfC,WANF;AAQA,WAAOC,QAAP;AACD,GA9CyB;AAAA,CAA1B;;AAgDA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,aAAD;AAAA,SAAgD,UAACtB,OAAD,EAAuBC,OAAvB,EAA0D;AACrI,QAAMsB,MAAM,GAAGD,aAAa,GAAGrB,OAAO,CAACuB,EAAX,CAA5B;;AACA,QAAID,MAAM,KAAKE,SAAf,EAA0B;AACxB,YAAM,IAAIC,KAAJ,kBAAoBzB,OAAO,CAAC0B,cAA5B,oCAAN;AACD;;AACD,WAAOJ,MAAP;AACD,GAN4B;AAAA,CAA7B;;AAQA,OAAO,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACN,aAAD,EAA6CvB,eAA7C,EAA8E;AAC/G,MAAM8B,WAAW,GAAG/B,iBAAiB,CAACC,eAAD,CAArC;AACA,MAAM+B,cAAc,GAAGT,oBAAoB,CAACC,aAAD,CAA3C;AACA,SAAOzB,WAAW,CAACgC,WAAD,EAAcC,cAAd,CAAlB;AACD,CAJM","sourcesContent":["import { \n  CutoffScores,\n  Program,\n  ReqFnFilter,\n  StudentData,\n  NonSECutoffDictionary,\n} from \"../../../../shared/types\";\n\nimport { pointSystem } from \"./point-system\";\n\nconst createIBPointCalc = (ifInAttendBound: ReqFnFilter) => (student: StudentData, program: Program): number | null => {\n\n  // if any needed student data is null, return early with null\n  if (student.nweaPercentileMath === null ||\n    student.nweaPercentileRead === null ||\n    student.subjGradeMath === null ||\n    student.subjGradeRead === null ||\n    student.subjGradeSci === null ||\n    student.subjGradeSocStudies === null) {\n\n    return null;\n  }\n\n  const IB_NWEA_SCORE_CONSTANT = 2.2727;\n  const IB_ATTEND_BOUND_BONUS_PTS = 50;\n\n  // calculate points for NWEA scores\n  const nweaMathPoints = Math.round(student.nweaPercentileMath * IB_NWEA_SCORE_CONSTANT);\n  const nweaReadPoints = Math.round(student.nweaPercentileRead * IB_NWEA_SCORE_CONSTANT);\n\n  // calculate score component for subj grades\n  const gradePointsLookup = {\n    \"A\": 112.5,\n    \"B\": 75,\n    \"C\": 38,\n    \"D\": 0,\n    \"F\": 0,\n  }\n  const subjGradeMathPoints = gradePointsLookup[student.subjGradeMath];\n  const subjGradeReadPoints = gradePointsLookup[student.subjGradeRead];\n  const subjGradeSciPoints = gradePointsLookup[student.subjGradeSci];\n  const subjGradeSocStudiesPoints = gradePointsLookup[student.subjGradeSocStudies];\n  \n  // if student is in attendance bound of the IB program's school, the student gets a bonus\n  // TODO figure out what to do for schools without attendance bounds, like BACK OF THE YARDS HS\n  const attendBonus = ifInAttendBound(student, program) ? IB_ATTEND_BOUND_BONUS_PTS : 0;\n\n  const ibPoints = nweaMathPoints +\n    nweaReadPoints +\n    subjGradeMathPoints +\n    subjGradeReadPoints + \n    subjGradeSciPoints +\n    subjGradeSocStudiesPoints +\n    attendBonus;\n\n  return ibPoints;\n};  \n\nconst createIBCutoffLookup = (getCutoffDict: () => NonSECutoffDictionary) => (student: StudentData, program: Program): CutoffScores => {\n  const cutoff = getCutoffDict()[program.id];\n  if (cutoff === undefined) {\n    throw new Error(`School ${program.schoolNameLong} not found in IB Cutoff scores`); \n  }\n  return cutoff;\n};\n\nexport const createIBPointSystem = (getCutoffDict: () => NonSECutoffDictionary, ifInAttendBound: ReqFnFilter) => {\n  const ibPointCalc = createIBPointCalc(ifInAttendBound);\n  const ibCutoffLookup = createIBCutoffLookup(getCutoffDict);\n  return pointSystem(ibPointCalc, ibCutoffLookup);\n} \n  \n\n"]},"metadata":{},"sourceType":"module"}