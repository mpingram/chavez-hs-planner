{"ast":null,"code":"import { isValidNwea, isValidCombinedNwea, isValidGPA, isValidAttendance } from \"../../../../shared/util/grade-validate\";\nexport var ifHasGrades = function ifHasGrades(grades) {\n  var hasNweaMath = grades.nweaMath !== undefined;\n  var hasNweaRead = grades.nweaRead !== undefined;\n  var hasNweaMathOrRead = hasNweaMath || hasNweaRead;\n  var hasNweaBoth = grades.nweaBoth !== undefined;\n  var hasNweaCombined = grades.nweaCombined !== undefined;\n  var hasGpa = grades.gpa !== undefined;\n  var hasAttendance = grades.attendance !== undefined;\n  var illegalCombination = hasNweaMathOrRead && hasNweaBoth || hasNweaBoth && hasNweaCombined || hasNweaMathOrRead && hasNweaCombined;\n\n  if (illegalCombination) {\n    throw new Error(\"ifHasGrades: only one of (nweaMath/nweaRead), nweaBoth, and nweaCombined may be set in the grades argument.\");\n  } // check to make sure grades isn't missing all properties\n\n\n  var hasAny = hasNweaMath || hasNweaRead || hasNweaBoth || hasNweaCombined || hasGpa || hasAttendance;\n\n  if (!hasAny) {\n    throw new Error(\"No grade thresholds found in grades argument.\");\n  } // check to make sure passed grades are valid \n\n\n  if (hasNweaMath) {\n    if (!isValidNwea(grades.nweaMath)) {\n      throw new Error(\"Invalid value for nweaMath\");\n    }\n  }\n\n  if (hasNweaRead) {\n    if (!isValidNwea(grades.nweaRead)) {\n      throw new Error(\"Invalid value for nweaRead\");\n    }\n  }\n\n  if (hasNweaBoth) {\n    if (!isValidNwea(grades.nweaBoth)) {\n      throw new Error(\"Invalid value for nweaBoth\");\n    }\n  }\n\n  if (hasNweaCombined) {\n    if (!isValidCombinedNwea(grades.nweaCombined)) {\n      throw new Error(\"Invalid value for nweaCombined\");\n    }\n  }\n\n  if (hasGpa) {\n    if (!isValidGPA(grades.gpa)) {\n      throw new Error(\"Invalid value for gpa\");\n    }\n  }\n\n  if (hasAttendance) {\n    if (!isValidAttendance(grades.attendance)) {\n      throw new Error(\"Invalid value for attendance\");\n    }\n  }\n\n  return function (student, program) {\n    // If we recieved either(/both) the nweaMath and nweaRead options,\n    // check the student's nweaMath or(/and) nweaRead scores.\n    if (grades.nweaMath !== undefined || grades.nweaRead !== undefined) {\n      if (grades.nweaMath !== undefined) {\n        if (student.nweaPercentileMath === null) {\n          return false;\n        } else if (student.nweaPercentileMath < grades.nweaMath) {\n          return false;\n        }\n      }\n\n      if (grades.nweaRead !== undefined) {\n        if (student.nweaPercentileRead === null) {\n          return false;\n        } else if (student.nweaPercentileRead < grades.nweaRead) {\n          return false;\n        }\n      } // Else if we recieved the nweaBoth argument, check the student's\n      // nweaRead and nweaMath scores against the value of nweaBoth.\n\n    } else if (grades.nweaBoth !== undefined) {\n      if (student.nweaPercentileMath === null || student.nweaPercentileRead === null) {\n        return false;\n      } else if (student.nweaPercentileMath < grades.nweaBoth || student.nweaPercentileRead < grades.nweaBoth) {\n        return false;\n      } // Else if we recieved the nweaCombined argument, check the student's\n      // nweaRead + nweaMath scores added together against the value of nweaCombined.\n\n    } else if (grades.nweaCombined !== undefined) {\n      if (student.nweaPercentileMath === null || student.nweaPercentileRead === null) {\n        return false;\n      } else if (student.nweaPercentileMath + student.nweaPercentileRead < grades.nweaCombined) {\n        return false;\n      }\n    } // If we received the gpa option, check gpa.\n\n\n    if (grades.gpa !== undefined) {\n      if (student.gpa === null) {\n        return false;\n      } else if (student.gpa < grades.gpa) {\n        return false;\n      }\n    } // If we recieved the attendance option, check attendance.\n\n\n    if (grades.attendance !== undefined) {\n      if (student.attendancePercentage === null) {\n        return false;\n      } else if (student.attendancePercentage < grades.attendance) {\n        return false;\n      }\n    } // fallthrough: student has passed all tests.\n\n\n    return true;\n  };\n};","map":{"version":3,"sources":["/home/michael/code/chavez-hs-planner/src/shared/requirement-functions/requirement-function-builders/filters/if-has-grades.ts"],"names":["isValidNwea","isValidCombinedNwea","isValidGPA","isValidAttendance","ifHasGrades","grades","hasNweaMath","nweaMath","undefined","hasNweaRead","nweaRead","hasNweaMathOrRead","hasNweaBoth","nweaBoth","hasNweaCombined","nweaCombined","hasGpa","gpa","hasAttendance","attendance","illegalCombination","Error","hasAny","student","program","nweaPercentileMath","nweaPercentileRead","attendancePercentage"],"mappings":"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","sourcesContent":["import { ReqFnFilter } from \"../../../../shared/types\";\n\nimport {\n  isValidNwea, \n  isValidCombinedNwea, \n  isValidGPA, \n  isValidAttendance\n} from \"../../../../shared/util/grade-validate\";\n\ninterface StudentGrades {\n  nweaMath?: number\n  nweaRead?: number\n  nweaBoth?: number\n  nweaCombined?: number\n  gpa?: number\n  attendance?: number\n}\n\nexport const ifHasGrades = (grades: StudentGrades): ReqFnFilter => {\n\n  const hasNweaMath = grades.nweaMath !== undefined \n  const hasNweaRead = grades.nweaRead !== undefined;\n  const hasNweaMathOrRead = hasNweaMath || hasNweaRead;\n  const hasNweaBoth = grades.nweaBoth !== undefined;\n  const hasNweaCombined = grades.nweaCombined !== undefined;\n  const hasGpa = grades.gpa !== undefined;\n  const hasAttendance = grades.attendance !== undefined;\n\n  const illegalCombination = (hasNweaMathOrRead && hasNweaBoth) || (hasNweaBoth && hasNweaCombined) || (hasNweaMathOrRead && hasNweaCombined);\n  if (illegalCombination) {\n    throw new Error(\"ifHasGrades: only one of (nweaMath/nweaRead), nweaBoth, and nweaCombined may be set in the grades argument.\");\n  }\n\n  // check to make sure grades isn't missing all properties\n  const hasAny = hasNweaMath || hasNweaRead || hasNweaBoth || hasNweaCombined || hasGpa || hasAttendance;\n  if (!hasAny) {\n    throw new Error(\"No grade thresholds found in grades argument.\");\n  }\n\n  // check to make sure passed grades are valid \n  if (hasNweaMath) {\n    if (!isValidNwea(grades.nweaMath)) {\n      throw new Error(\"Invalid value for nweaMath\");\n    }\n  }\n  if (hasNweaRead) {\n    if (!isValidNwea(grades.nweaRead)) {\n      throw new Error(\"Invalid value for nweaRead\");\n    }\n  }\n  if (hasNweaBoth) {\n    if (!isValidNwea(grades.nweaBoth)) {\n      throw new Error(\"Invalid value for nweaBoth\");\n    }\n  }\n  if (hasNweaCombined) {\n    if (!isValidCombinedNwea(grades.nweaCombined)) {\n      throw new Error(\"Invalid value for nweaCombined\");\n    }\n  }\n  if (hasGpa) {\n    if (!isValidGPA(grades.gpa)) {\n      throw new Error(\"Invalid value for gpa\");\n    }\n  }\n  if (hasAttendance) {\n    if(!isValidAttendance(grades.attendance)) {\n      throw new Error(\"Invalid value for attendance\");\n    }\n  }\n\n  return (student, program) => {\n\n    // If we recieved either(/both) the nweaMath and nweaRead options,\n    // check the student's nweaMath or(/and) nweaRead scores.\n    if (grades.nweaMath !== undefined || grades.nweaRead !== undefined) {\n\n      if (grades.nweaMath !== undefined) {\n        if (student.nweaPercentileMath === null) {\n          return false;\n        } else if (student.nweaPercentileMath < grades.nweaMath) {\n          return false;\n        }\n      }\n      if (grades.nweaRead !== undefined) {\n        if (student.nweaPercentileRead === null) {\n          return false;\n        } else if (student.nweaPercentileRead < grades.nweaRead) {\n          return false;\n        }\n      }\n\n      // Else if we recieved the nweaBoth argument, check the student's\n      // nweaRead and nweaMath scores against the value of nweaBoth.\n    } else if (grades.nweaBoth !== undefined) {\n      if (student.nweaPercentileMath === null || student.nweaPercentileRead === null) {\n        return false;\n      } else if (student.nweaPercentileMath < grades.nweaBoth || student.nweaPercentileRead < grades.nweaBoth) {\n        return false;\n      }\n\n      // Else if we recieved the nweaCombined argument, check the student's\n      // nweaRead + nweaMath scores added together against the value of nweaCombined.\n    } else if (grades.nweaCombined !== undefined) {\n      if (student.nweaPercentileMath === null || student.nweaPercentileRead === null) {\n        return false;\n      } else if (student.nweaPercentileMath + student.nweaPercentileRead < grades.nweaCombined) {\n        return false;\n      }\n    }\n\n\n    // If we received the gpa option, check gpa.\n    if (grades.gpa !== undefined) {\n      if (student.gpa === null) {\n        return false;\n      } else if (student.gpa < grades.gpa) {\n        return false;\n      }\n    }\n\n    // If we recieved the attendance option, check attendance.\n    if (grades.attendance !== undefined) {\n      if (student.attendancePercentage === null) {\n        return false;\n      } else if (student.attendancePercentage < grades.attendance) {\n        return false;\n      }\n    }\n\n    // fallthrough: student has passed all tests.\n    return true;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}