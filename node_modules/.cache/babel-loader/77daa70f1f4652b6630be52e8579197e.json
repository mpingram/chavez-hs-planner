{"ast":null,"code":"(function () {\n  var JSONP, computedUrl, createElement, encode, noop, objectToURI, random, randomString;\n\n  createElement = function createElement(tag) {\n    return window.document.createElement(tag);\n  };\n\n  encode = window.encodeURIComponent;\n  random = Math.random;\n\n  JSONP = function JSONP(options) {\n    var callback, callbackFunc, callbackName, done, head, params, script;\n\n    if (options == null) {\n      options = {};\n    }\n\n    params = {\n      data: options.data || {},\n      error: options.error || noop,\n      success: options.success || noop,\n      beforeSend: options.beforeSend || noop,\n      complete: options.complete || noop,\n      url: options.url || ''\n    };\n    params.computedUrl = computedUrl(params);\n\n    if (params.url.length === 0) {\n      throw new Error('MissingUrl');\n    }\n\n    done = false;\n\n    if (params.beforeSend({}, params) !== false) {\n      callbackName = options.callbackName || 'callback';\n      callbackFunc = options.callbackFunc || 'jsonp_' + randomString(15);\n      callback = params.data[callbackName] = callbackFunc;\n\n      window[callback] = function (data) {\n        window[callback] = null;\n        params.success(data, params);\n        return params.complete(data, params);\n      };\n\n      script = createElement('script');\n      script.src = computedUrl(params);\n      script.async = true;\n\n      script.onerror = function (evt) {\n        params.error({\n          url: script.src,\n          event: evt\n        });\n        return params.complete({\n          url: script.src,\n          event: evt\n        }, params);\n      };\n\n      script.onload = script.onreadystatechange = function () {\n        var ref, ref1;\n\n        if (done || (ref = this.readyState) !== 'loaded' && ref !== 'complete') {\n          return;\n        }\n\n        done = true;\n\n        if (script) {\n          script.onload = script.onreadystatechange = null;\n\n          if ((ref1 = script.parentNode) != null) {\n            ref1.removeChild(script);\n          }\n\n          return script = null;\n        }\n      };\n\n      head = window.document.getElementsByTagName('head')[0] || window.document.documentElement;\n      head.insertBefore(script, head.firstChild);\n    }\n\n    return {\n      abort: function abort() {\n        window[callback] = function () {\n          return window[callback] = null;\n        };\n\n        done = true;\n\n        if (script != null ? script.parentNode : void 0) {\n          script.onload = script.onreadystatechange = null;\n          script.parentNode.removeChild(script);\n          return script = null;\n        }\n      }\n    };\n  };\n\n  noop = function noop() {\n    return void 0;\n  };\n\n  computedUrl = function computedUrl(params) {\n    var url;\n    url = params.url;\n    url += params.url.indexOf('?') < 0 ? '?' : '&';\n    url += objectToURI(params.data);\n    return url;\n  };\n\n  randomString = function randomString(length) {\n    var str;\n    str = '';\n\n    while (str.length < length) {\n      str += random().toString(36).slice(2, 3);\n    }\n\n    return str;\n  };\n\n  objectToURI = function objectToURI(obj) {\n    var data, key, value;\n\n    data = function () {\n      var results;\n      results = [];\n\n      for (key in obj) {\n        value = obj[key];\n        results.push(encode(key) + '=' + encode(value));\n      }\n\n      return results;\n    }();\n\n    return data.join('&');\n  };\n\n  if (typeof define !== \"undefined\" && define !== null ? define.amd : void 0) {\n    define(function () {\n      return JSONP;\n    });\n  } else if (typeof module !== \"undefined\" && module !== null ? module.exports : void 0) {\n    module.exports = JSONP;\n  } else {\n    this.JSONP = JSONP;\n  }\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}