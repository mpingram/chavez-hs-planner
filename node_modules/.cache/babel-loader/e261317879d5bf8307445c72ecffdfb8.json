{"ast":null,"code":"import _objectSpread from \"/home/michael/code/chavez-hs-planner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ActionType } from \"../../../shared/enums\";\nimport calculateGPA from \"../../../shared/util/calculate-gpa\";\nimport { initialStudentData } from \"./initial-state\";\n\nvar sanitizePercentile = function sanitizePercentile(percentile) {\n  // if input is NaN, return null\n  // if input is less than 1, return 1\n  // if input is greater than 99, return 99\n  var sanitized;\n\n  if (Number.isNaN(percentile)) {\n    sanitized = null;\n  } else if (percentile < 1) {\n    sanitized = 1;\n  } else if (percentile > 99) {\n    sanitized = 99;\n  } else {\n    sanitized = percentile;\n  }\n\n  return sanitized;\n};\n\nvar sanitizeAttendancePercentage = function sanitizeAttendancePercentage(percentage) {\n  // if input is NaN, return null\n  // if input is less than 0, return 0\n  // if input is greater than 100, return 100\n  var sanitized;\n\n  if (Number.isNaN(percentage)) {\n    sanitized = null;\n  } else if (percentage < 0) {\n    sanitized = 0;\n  } else if (percentage > 100) {\n    sanitized = 100;\n  } else {\n    sanitized = percentage;\n  }\n\n  return sanitized;\n};\n\nexport var studentDataReducer = function studentDataReducer() {\n  var studentData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStudentData;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var nextStudentData = studentData;\n\n  switch (action.type) {\n    case ActionType.UpdateStudentGender:\n      nextStudentData = _objectSpread({}, studentData, {\n        gender: action.payload\n      });\n      break;\n\n    case ActionType.UpdateStudentAddress:\n      nextStudentData = _objectSpread({}, studentData, {\n        address: action.payload\n      });\n      break;\n\n    case ActionType.UpdateStudentTier:\n      nextStudentData = _objectSpread({}, studentData, {\n        tier: action.payload\n      });\n      break;\n\n    case ActionType.UpdateStudentGeo:\n      nextStudentData = _objectSpread({}, studentData, {\n        geo: action.payload\n      });\n      break;\n\n    case ActionType.UpdateStudentGradeLevel:\n      nextStudentData = _objectSpread({}, studentData, {\n        gradeLevel: action.payload\n      });\n      break;\n\n    case ActionType.UpdateStudentSkip7OrRepeated8:\n      nextStudentData = _objectSpread({}, studentData, {\n        skippedGrade7OrRepeatedGrade8: action.payload\n      });\n      break;\n\n    case ActionType.UpdateStudentCurrESProgram:\n      nextStudentData = _objectSpread({}, studentData, {\n        currESProgramID: action.payload\n      });\n      break;\n\n    case ActionType.UpdateStudentELLStatus:\n      nextStudentData = _objectSpread({}, studentData, {\n        ell: action.payload\n      });\n      break;\n\n    case ActionType.UpdateStudentIEPStatus:\n      nextStudentData = _objectSpread({}, studentData, {\n        iep: action.payload\n      });\n      break;\n\n    case ActionType.UpdateStudentAttendPercentage:\n      var attendancePercentage = sanitizeAttendancePercentage(action.payload);\n      nextStudentData = _objectSpread({}, studentData, {\n        attendancePercentage: attendancePercentage\n      });\n      break;\n\n    case ActionType.UpdateStudentSiblingHSSchools:\n      nextStudentData = _objectSpread({}, studentData, {\n        siblingHSSchoolIDs: action.payload\n      });\n      break;\n\n    case ActionType.UpdateStudentSETestPercentile:\n      var seTestPercentile = sanitizePercentile(action.payload);\n      nextStudentData = _objectSpread({}, studentData, {\n        seTestPercentile: seTestPercentile\n      });\n      break;\n\n    case ActionType.UpdateStudentNWEAPercentileMath:\n      var nweaPercentileMath = sanitizePercentile(action.payload);\n      nextStudentData = _objectSpread({}, studentData, {\n        nweaPercentileMath: nweaPercentileMath\n      });\n      break;\n\n    case ActionType.UpdateStudentNWEAPercentileRead:\n      var nweaPercentileRead = sanitizePercentile(action.payload);\n      nextStudentData = _objectSpread({}, studentData, {\n        nweaPercentileRead: nweaPercentileRead\n      });\n      break;\n\n    case ActionType.UpdateStudentSubjGradeMath:\n      nextStudentData = _objectSpread({}, studentData, {\n        subjGradeMath: action.payload,\n        gpa: calculateGPA(action.payload, studentData.subjGradeRead, studentData.subjGradeSci, studentData.subjGradeSocStudies)\n      });\n      break;\n\n    case ActionType.UpdateStudentSubjGradeRead:\n      nextStudentData = _objectSpread({}, studentData, {\n        subjGradeRead: action.payload,\n        gpa: calculateGPA(studentData.subjGradeMath, action.payload, studentData.subjGradeSci, studentData.subjGradeSocStudies)\n      });\n      break;\n\n    case ActionType.UpdateStudentSubjGradeSci:\n      nextStudentData = _objectSpread({}, studentData, {\n        subjGradeSci: action.payload,\n        gpa: calculateGPA(studentData.subjGradeMath, studentData.subjGradeRead, action.payload, studentData.subjGradeSocStudies)\n      });\n      break;\n\n    case ActionType.UpdateStudentSubjGradeSocStudies:\n      nextStudentData = _objectSpread({}, studentData, {\n        subjGradeSocStudies: action.payload,\n        gpa: calculateGPA(studentData.subjGradeMath, studentData.subjGradeRead, studentData.subjGradeSci, action.payload)\n      });\n      break;\n  }\n\n  return nextStudentData;\n};","map":{"version":3,"sources":["/home/michael/code/chavez-hs-planner/src/shared/redux/reducers/student-data-reducer.ts"],"names":["ActionType","calculateGPA","initialStudentData","sanitizePercentile","percentile","sanitized","Number","isNaN","sanitizeAttendancePercentage","percentage","studentDataReducer","studentData","action","nextStudentData","type","UpdateStudentGender","gender","payload","UpdateStudentAddress","address","UpdateStudentTier","tier","UpdateStudentGeo","geo","UpdateStudentGradeLevel","gradeLevel","UpdateStudentSkip7OrRepeated8","skippedGrade7OrRepeatedGrade8","UpdateStudentCurrESProgram","currESProgramID","UpdateStudentELLStatus","ell","UpdateStudentIEPStatus","iep","UpdateStudentAttendPercentage","attendancePercentage","UpdateStudentSiblingHSSchools","siblingHSSchoolIDs","UpdateStudentSETestPercentile","seTestPercentile","UpdateStudentNWEAPercentileMath","nweaPercentileMath","UpdateStudentNWEAPercentileRead","nweaPercentileRead","UpdateStudentSubjGradeMath","subjGradeMath","gpa","subjGradeRead","subjGradeSci","subjGradeSocStudies","UpdateStudentSubjGradeRead","UpdateStudentSubjGradeSci","UpdateStudentSubjGradeSocStudies"],"mappings":";AAGA,SAASA,UAAT,QAA2B,uBAA3B;AAEA,OAAOC,YAAP,MAAyB,oCAAzB;AAEA,SAASC,kBAAT,QAAmC,iBAAnC;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,UAAD,EAAuC;AAChE;AACA;AACA;AACA,MAAIC,SAAJ;;AACA,MAAIC,MAAM,CAACC,KAAP,CAAaH,UAAb,CAAJ,EAA6B;AAC3BC,IAAAA,SAAS,GAAG,IAAZ;AACD,GAFD,MAEO,IAAID,UAAU,GAAG,CAAjB,EAAoB;AACzBC,IAAAA,SAAS,GAAG,CAAZ;AACD,GAFM,MAEA,IAAID,UAAU,GAAG,EAAjB,EAAqB;AAC1BC,IAAAA,SAAS,GAAG,EAAZ;AACD,GAFM,MAEA;AACLA,IAAAA,SAAS,GAAGD,UAAZ;AACD;;AACD,SAAOC,SAAP;AACD,CAfD;;AAiBA,IAAMG,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,UAAD,EAAuC;AAC1E;AACA;AACA;AACA,MAAIJ,SAAJ;;AACA,MAAIC,MAAM,CAACC,KAAP,CAAaE,UAAb,CAAJ,EAA6B;AAC3BJ,IAAAA,SAAS,GAAG,IAAZ;AACD,GAFD,MAEO,IAAII,UAAU,GAAG,CAAjB,EAAoB;AACzBJ,IAAAA,SAAS,GAAG,CAAZ;AACD,GAFM,MAEA,IAAII,UAAU,GAAG,GAAjB,EAAsB;AAC3BJ,IAAAA,SAAS,GAAG,GAAZ;AACD,GAFM,MAEA;AACLA,IAAAA,SAAS,GAAGI,UAAZ;AACD;;AACD,SAAOJ,SAAP;AACD,CAfD;;AAiBA,OAAO,IAAMK,kBAA8C,GAAG,SAAjDA,kBAAiD,GAA2D;AAAA,MAA1DC,WAA0D,uEAA5CT,kBAA4C;AAAA,MAAxBU,MAAwB;AACvH,MAAIC,eAA4B,GAAGF,WAAnC;;AACA,UAAOC,MAAM,CAACE,IAAd;AACE,SAAKd,UAAU,CAACe,mBAAhB;AACEF,MAAAA,eAAe,qBAAOF,WAAP;AAAoBK,QAAAA,MAAM,EAAEJ,MAAM,CAACK;AAAnC,QAAf;AACA;;AACF,SAAKjB,UAAU,CAACkB,oBAAhB;AACEL,MAAAA,eAAe,qBAAOF,WAAP;AAAoBQ,QAAAA,OAAO,EAAEP,MAAM,CAACK;AAApC,QAAf;AACA;;AACF,SAAKjB,UAAU,CAACoB,iBAAhB;AACEP,MAAAA,eAAe,qBAAOF,WAAP;AAAoBU,QAAAA,IAAI,EAAET,MAAM,CAACK;AAAjC,QAAf;AACA;;AACF,SAAKjB,UAAU,CAACsB,gBAAhB;AACET,MAAAA,eAAe,qBAAOF,WAAP;AAAoBY,QAAAA,GAAG,EAAEX,MAAM,CAACK;AAAhC,QAAf;AACA;;AACF,SAAKjB,UAAU,CAACwB,uBAAhB;AACEX,MAAAA,eAAe,qBAAOF,WAAP;AAAoBc,QAAAA,UAAU,EAAEb,MAAM,CAACK;AAAvC,QAAf;AACA;;AACF,SAAKjB,UAAU,CAAC0B,6BAAhB;AACEb,MAAAA,eAAe,qBAAOF,WAAP;AAAoBgB,QAAAA,6BAA6B,EAAEf,MAAM,CAACK;AAA1D,QAAf;AACA;;AACF,SAAKjB,UAAU,CAAC4B,0BAAhB;AACEf,MAAAA,eAAe,qBAAOF,WAAP;AAAoBkB,QAAAA,eAAe,EAAEjB,MAAM,CAACK;AAA5C,QAAf;AACA;;AACF,SAAKjB,UAAU,CAAC8B,sBAAhB;AACEjB,MAAAA,eAAe,qBAAOF,WAAP;AAAoBoB,QAAAA,GAAG,EAAEnB,MAAM,CAACK;AAAhC,QAAf;AACA;;AACF,SAAKjB,UAAU,CAACgC,sBAAhB;AACEnB,MAAAA,eAAe,qBAAOF,WAAP;AAAoBsB,QAAAA,GAAG,EAAErB,MAAM,CAACK;AAAhC,QAAf;AACA;;AACF,SAAKjB,UAAU,CAACkC,6BAAhB;AACE,UAAMC,oBAAoB,GAAG3B,4BAA4B,CAACI,MAAM,CAACK,OAAR,CAAzD;AACAJ,MAAAA,eAAe,qBAAOF,WAAP;AAAoBwB,QAAAA,oBAAoB,EAAEA;AAA1C,QAAf;AACA;;AACF,SAAKnC,UAAU,CAACoC,6BAAhB;AACEvB,MAAAA,eAAe,qBAAOF,WAAP;AAAoB0B,QAAAA,kBAAkB,EAAEzB,MAAM,CAACK;AAA/C,QAAf;AACA;;AACF,SAAKjB,UAAU,CAACsC,6BAAhB;AACE,UAAMC,gBAAgB,GAAGpC,kBAAkB,CAACS,MAAM,CAACK,OAAR,CAA3C;AACAJ,MAAAA,eAAe,qBAAOF,WAAP;AAAoB4B,QAAAA,gBAAgB,EAAEA;AAAtC,QAAf;AACA;;AACF,SAAKvC,UAAU,CAACwC,+BAAhB;AACE,UAAMC,kBAAkB,GAAGtC,kBAAkB,CAACS,MAAM,CAACK,OAAR,CAA7C;AACAJ,MAAAA,eAAe,qBAAOF,WAAP;AAAoB8B,QAAAA,kBAAkB,EAAEA;AAAxC,QAAf;AACA;;AACF,SAAKzC,UAAU,CAAC0C,+BAAhB;AACE,UAAMC,kBAAkB,GAAGxC,kBAAkB,CAACS,MAAM,CAACK,OAAR,CAA7C;AACAJ,MAAAA,eAAe,qBAAOF,WAAP;AAAoBgC,QAAAA,kBAAkB,EAAEA;AAAxC,QAAf;AACA;;AACF,SAAK3C,UAAU,CAAC4C,0BAAhB;AACE/B,MAAAA,eAAe,qBACVF,WADU;AAEbkC,QAAAA,aAAa,EAAEjC,MAAM,CAACK,OAFT;AAGb6B,QAAAA,GAAG,EAAE7C,YAAY,CACfW,MAAM,CAACK,OADQ,EAEfN,WAAW,CAACoC,aAFG,EAGfpC,WAAW,CAACqC,YAHG,EAIfrC,WAAW,CAACsC,mBAJG;AAHJ,QAAf;AAUA;;AACF,SAAKjD,UAAU,CAACkD,0BAAhB;AACErC,MAAAA,eAAe,qBACVF,WADU;AAEboC,QAAAA,aAAa,EAAEnC,MAAM,CAACK,OAFT;AAGb6B,QAAAA,GAAG,EAAE7C,YAAY,CACfU,WAAW,CAACkC,aADG,EAEfjC,MAAM,CAACK,OAFQ,EAGfN,WAAW,CAACqC,YAHG,EAIfrC,WAAW,CAACsC,mBAJG;AAHJ,QAAf;AAUA;;AACF,SAAKjD,UAAU,CAACmD,yBAAhB;AACEtC,MAAAA,eAAe,qBACVF,WADU;AAEbqC,QAAAA,YAAY,EAAEpC,MAAM,CAACK,OAFR;AAGb6B,QAAAA,GAAG,EAAE7C,YAAY,CACfU,WAAW,CAACkC,aADG,EAEflC,WAAW,CAACoC,aAFG,EAGfnC,MAAM,CAACK,OAHQ,EAIfN,WAAW,CAACsC,mBAJG;AAHJ,QAAf;AAUA;;AACF,SAAKjD,UAAU,CAACoD,gCAAhB;AACEvC,MAAAA,eAAe,qBACVF,WADU;AAEbsC,QAAAA,mBAAmB,EAAErC,MAAM,CAACK,OAFf;AAGb6B,QAAAA,GAAG,EAAE7C,YAAY,CACfU,WAAW,CAACkC,aADG,EAEflC,WAAW,CAACoC,aAFG,EAGfpC,WAAW,CAACqC,YAHG,EAIfpC,MAAM,CAACK,OAJQ;AAHJ,QAAf;AAUA;AA9FJ;;AAgGA,SAAOJ,eAAP;AACD,CAnGM","sourcesContent":["import * as Redux from \"redux\";\n\nimport { StudentData } from \"../../../shared/types\";\nimport { ActionType } from \"../../../shared/enums\";\n\nimport calculateGPA from \"../../../shared/util/calculate-gpa\";\n\nimport { initialStudentData } from \"./initial-state\";\n\nconst sanitizePercentile = (percentile: number): number | null => {\n  // if input is NaN, return null\n  // if input is less than 1, return 1\n  // if input is greater than 99, return 99\n  let sanitized;\n  if (Number.isNaN(percentile)){\n    sanitized = null;\n  } else if (percentile < 1) {\n    sanitized = 1;\n  } else if (percentile > 99) {\n    sanitized = 99\n  } else {\n    sanitized = percentile;\n  }\n  return sanitized;\n};\n\nconst sanitizeAttendancePercentage = (percentage: number): number | null => {\n  // if input is NaN, return null\n  // if input is less than 0, return 0\n  // if input is greater than 100, return 100\n  let sanitized;\n  if (Number.isNaN(percentage)){\n    sanitized = null;\n  } else if (percentage < 0) {\n    sanitized = 0;\n  } else if (percentage > 100) {\n    sanitized = 100;\n  } else {\n    sanitized = percentage;\n  }\n  return sanitized;\n};\n\nexport const studentDataReducer: Redux.Reducer<StudentData> = (studentData = initialStudentData, action): StudentData => {\n  let nextStudentData: StudentData = studentData;\n  switch(action.type) {\n    case ActionType.UpdateStudentGender:\n      nextStudentData = {...studentData, gender: action.payload};\n      break;\n    case ActionType.UpdateStudentAddress:\n      nextStudentData = {...studentData, address: action.payload};\n      break;\n    case ActionType.UpdateStudentTier:\n      nextStudentData = {...studentData, tier: action.payload};\n      break;\n    case ActionType.UpdateStudentGeo:\n      nextStudentData = {...studentData, geo: action.payload};\n      break;\n    case ActionType.UpdateStudentGradeLevel:\n      nextStudentData = {...studentData, gradeLevel: action.payload};\n      break;\n    case ActionType.UpdateStudentSkip7OrRepeated8:\n      nextStudentData = {...studentData, skippedGrade7OrRepeatedGrade8: action.payload};\n      break;\n    case ActionType.UpdateStudentCurrESProgram:\n      nextStudentData = {...studentData, currESProgramID: action.payload};\n      break;\n    case ActionType.UpdateStudentELLStatus:\n      nextStudentData = {...studentData, ell: action.payload};\n      break;\n    case ActionType.UpdateStudentIEPStatus:\n      nextStudentData = {...studentData, iep: action.payload};\n      break;\n    case ActionType.UpdateStudentAttendPercentage:\n      const attendancePercentage = sanitizeAttendancePercentage(action.payload);\n      nextStudentData = {...studentData, attendancePercentage: attendancePercentage};\n      break;\n    case ActionType.UpdateStudentSiblingHSSchools:\n      nextStudentData = {...studentData, siblingHSSchoolIDs: action.payload};\n      break;\n    case ActionType.UpdateStudentSETestPercentile:\n      const seTestPercentile = sanitizePercentile(action.payload);\n      nextStudentData = {...studentData, seTestPercentile: seTestPercentile};\n      break;\n    case ActionType.UpdateStudentNWEAPercentileMath:\n      const nweaPercentileMath = sanitizePercentile(action.payload);\n      nextStudentData = {...studentData, nweaPercentileMath: nweaPercentileMath};\n      break;\n    case ActionType.UpdateStudentNWEAPercentileRead:\n      const nweaPercentileRead = sanitizePercentile(action.payload);\n      nextStudentData = {...studentData, nweaPercentileRead: nweaPercentileRead};\n      break;\n    case ActionType.UpdateStudentSubjGradeMath:\n      nextStudentData = {\n        ...studentData, \n        subjGradeMath: action.payload,\n        gpa: calculateGPA(\n          action.payload,\n          studentData.subjGradeRead,\n          studentData.subjGradeSci,\n          studentData.subjGradeSocStudies\n        )\n      };\n      break;\n    case ActionType.UpdateStudentSubjGradeRead:\n      nextStudentData = {\n        ...studentData, \n        subjGradeRead: action.payload,\n        gpa: calculateGPA(\n          studentData.subjGradeMath,\n          action.payload,\n          studentData.subjGradeSci,\n          studentData.subjGradeSocStudies\n        )\n      };\n      break;\n    case ActionType.UpdateStudentSubjGradeSci:\n      nextStudentData = {\n        ...studentData, \n        subjGradeSci: action.payload,\n        gpa: calculateGPA(\n          studentData.subjGradeMath,\n          studentData.subjGradeRead,\n          action.payload,\n          studentData.subjGradeSocStudies\n        )\n      };\n      break;\n    case ActionType.UpdateStudentSubjGradeSocStudies:\n      nextStudentData = {\n        ...studentData, \n        subjGradeSocStudies: action.payload,\n        gpa: calculateGPA(\n          studentData.subjGradeMath,\n          studentData.subjGradeRead,\n          studentData.subjGradeSci,\n          action.payload,\n        )\n      };\n      break;\n  }\n  return nextStudentData;\n};\n"]},"metadata":{},"sourceType":"module"}