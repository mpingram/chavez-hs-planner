{"ast":null,"code":"var _jsxFileName = \"/home/michael/code/chavez-hs-planner/src/path-to-hs/components/program-modal.tsx\";\nimport * as React from \"react\";\nimport { SuccessChance } from \"../../shared/enums\";\nimport { ProgramCard } from \"../../shared/components/program-card\";\nimport \"./program-modal.scss\";\nexport var ProgramModal = function ProgramModal(props) {\n  var toMessage = function toMessage(success) {\n    var msg = \"\";\n\n    switch (success) {\n      case SuccessChance.CERTAIN:\n        msg = \"You meet this requirement.\";\n        break;\n\n      case SuccessChance.LIKELY:\n        msg = \"You are more likely to meet this requirement than other people who apply.\";\n        break;\n\n      case SuccessChance.UNCERTAIN:\n        msg = \"You are just as likely to meet this requirement as everyone else.\";\n        break;\n\n      case SuccessChance.UNLIKELY:\n        msg = \"You are less likely to meet this requirement than other people who apply.\";\n        break;\n\n      case SuccessChance.NONE:\n        msg = \"You do not meet this requirement.\";\n        break;\n\n      case SuccessChance.NOTIMPLEMENTED:\n        msg = \"We don't know enough about this requirement to tell you.\";\n        break;\n    }\n\n    return msg;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"program-modal-bg-overlay \".concat(props.visible ? \"program-modal-active\" : \"\"),\n    onClick: props.onCloseButtonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"program-modal\",\n    onClick: function onClick(ev) {\n      return ev.stopPropagation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"program-modal-close-button\",\n    onClick: props.onCloseButtonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"X\"), React.createElement(\"div\", {\n    className: \"program-modal-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, props.program && props.outcome && React.createElement(\"div\", {\n    className: \"program-modal-program-card-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(ProgramCard, {\n    outcome: props.outcome.overallChance,\n    displayName: props.program.schoolNameShort,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), props.program && React.createElement(\"span\", {\n    className: \"program-modal-header-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, props.program.programName)), React.createElement(\"div\", {\n    className: \"program-modal-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"program-modal-requirements\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"program-modal-requirement-type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"To Apply:\"), React.createElement(\"td\", {\n    className: \"program-modal-requirement-desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.program && props.program.applicationReqDescription), React.createElement(\"td\", {\n    className: \"program-modal-requirement-outcome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, props.outcome && toMessage(props.outcome.applicationChance))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"program-modal-requirement-type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"To Be Selected:\"), React.createElement(\"td\", {\n    className: \"program-modal-requirement-desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, props.program && props.program.selectionReqDescription), React.createElement(\"td\", {\n    className: \"program-modal-requirement-outcome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, props.outcome && toMessage(props.outcome.selectionChance)))))), props.program && React.createElement(\"div\", {\n    className: \"program-modal-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"program-modal-button\",\n    target: \"_none\",\n    href: props.program.cpsPageURL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"CPS School Page\"), React.createElement(\"a\", {\n    className: \"program-modal-button\",\n    target: \"_none\",\n    href: props.program.schoolPageURL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"School Website\"), React.createElement(\"a\", {\n    className: \"program-modal-button\",\n    target: \"_none\",\n    href: props.program.hsBoundURL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"HS Bound School Page\"))));\n};","map":{"version":3,"sources":["/home/michael/code/chavez-hs-planner/src/path-to-hs/components/program-modal.tsx"],"names":["React","SuccessChance","ProgramCard","ProgramModal","props","toMessage","success","msg","CERTAIN","LIKELY","UNCERTAIN","UNLIKELY","NONE","NOTIMPLEMENTED","visible","onCloseButtonClick","ev","stopPropagation","program","outcome","overallChance","schoolNameShort","programName","applicationReqDescription","applicationChance","selectionReqDescription","selectionChance","cpsPageURL","schoolPageURL","hsBoundURL"],"mappings":"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","sourcesContent":["import * as React from \"react\";\n\nimport { Program, ProgramOutcome } from \"../../shared/types\";\nimport { SuccessChance }from \"../../shared/enums\";\n\nimport { ProgramCard } from \"../../shared/components/program-card\";\n\nimport \"./program-modal.scss\";\n\nexport interface ProgramModalProps {\n  visible: boolean\n  program: Program | null\n  outcome: ProgramOutcome | null\n  onCloseButtonClick: (ev) => any\n}\n\nexport const ProgramModal: React.SFC<ProgramModalProps> = (props) => {\n\n  const toMessage = (success: SuccessChance): string => {\n    let msg: string = \"\";\n    switch(success) {\n        case SuccessChance.CERTAIN:\n          msg = \"You meet this requirement.\";\n        break;\n        case SuccessChance.LIKELY:\n          msg = \"You are more likely to meet this requirement than other people who apply.\";\n        break;\n        case SuccessChance.UNCERTAIN:\n          msg = \"You are just as likely to meet this requirement as everyone else.\";\n        break;\n        case SuccessChance.UNLIKELY:\n          msg = \"You are less likely to meet this requirement than other people who apply.\"\n        break;\n        case SuccessChance.NONE:\n          msg = \"You do not meet this requirement.\";\n        break;\n        case SuccessChance.NOTIMPLEMENTED:\n          msg = \"We don't know enough about this requirement to tell you.\";\n        break;\n    }\n    return msg;\n  };\n\n  return (\n    <div \n      className={`program-modal-bg-overlay ${props.visible ? \"program-modal-active\" : \"\"}`} \n      onClick={props.onCloseButtonClick}\n    >\n      <div \n        className=\"program-modal\"\n        onClick={ ev => ev.stopPropagation() }\n      >\n        <button \n          className=\"program-modal-close-button\"\n          onClick={props.onCloseButtonClick}\n        >\n          X\n        </button>\n        <div className=\"program-modal-header\">\n          { props.program && props.outcome &&\n          <div className=\"program-modal-program-card-container\">\n            <ProgramCard outcome={props.outcome.overallChance} displayName={props.program.schoolNameShort}/>\n          </div>\n          }\n          { props.program && \n          <span className=\"program-modal-header-text\">{props.program.programName}</span>\n          }\n        </div>\n        <div className=\"program-modal-body\">\n          <table className=\"program-modal-requirements\">\n            <tbody>\n              <tr>\n                <td className=\"program-modal-requirement-type\">To Apply:</td>\n                <td className=\"program-modal-requirement-desc\">{props.program && props.program.applicationReqDescription}</td>\n                <td className=\"program-modal-requirement-outcome\">{props.outcome && toMessage(props.outcome.applicationChance)}</td>\n              </tr>\n              <tr>\n                <td className=\"program-modal-requirement-type\">To Be Selected:</td>\n                <td className=\"program-modal-requirement-desc\">{props.program && props.program.selectionReqDescription}</td>\n                <td className=\"program-modal-requirement-outcome\">{props.outcome && toMessage(props.outcome.selectionChance)}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        { props.program && \n        <div className=\"program-modal-footer\">\n          <a className=\"program-modal-button\" target=\"_none\" href={props.program.cpsPageURL}>CPS School Page</a>\n          <a className=\"program-modal-button\" target=\"_none\" href={props.program.schoolPageURL}>School Website</a>\n          <a className=\"program-modal-button\" target=\"_none\" href={props.program.hsBoundURL}>HS Bound School Page</a>\n        </div>\n        }\n      </div>\n\n    </div>\n  )\n};\n"]},"metadata":{},"sourceType":"module"}