{"ast":null,"code":"/*\n * Creates a data structure that groups programs together.\n * */\nexport var createProgramGroupDictionary = function createProgramGroupDictionary(hsPrograms) {\n  var programGroups = {};\n  Object.keys(hsPrograms).forEach(function (programID) {\n    var program = hsPrograms[programID];\n    var programType = program.programType; // if this program group does not already exist, \n    // create a new program group and add it to the program group dict.\n\n    if (programGroups[programType] === undefined) {\n      var newProgramGroup = {\n        id: programType,\n        name: programType,\n        programIDs: [program.id]\n      };\n      programGroups[programType] = newProgramGroup; // otherwise, add this program's id to the existing group.\n    } else {\n      programGroups[programType].programIDs.push(program.id);\n    }\n  });\n  return programGroups;\n};","map":{"version":3,"sources":["/home/michael/code/chavez-hs-planner/src/shared/redux/utils/create-program-groups.ts"],"names":["createProgramGroupDictionary","hsPrograms","programGroups","Object","keys","forEach","programID","program","programType","undefined","newProgramGroup","id","name","programIDs","push"],"mappings":"AAMA;;;AAGA,OAAO,IAAMA,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,UAAD,EAA2D;AACrG,MAAIC,aAAqC,GAAG,EAA5C;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,UAAZ,EAAwBI,OAAxB,CAAiC,UAAAC,SAAS,EAAI;AAE5C,QAAMC,OAAgB,GAAGN,UAAU,CAACK,SAAD,CAAnC;AACA,QAAME,WAAW,GAAGD,OAAO,CAACC,WAA5B,CAH4C,CAK5C;AACA;;AACA,QAAIN,aAAa,CAACM,WAAD,CAAb,KAA+BC,SAAnC,EAA8C;AAE5C,UAAMC,eAAe,GAAG;AACtBC,QAAAA,EAAE,EAAEH,WADkB;AAEtBI,QAAAA,IAAI,EAAEJ,WAFgB;AAGtBK,QAAAA,UAAU,EAAE,CAACN,OAAO,CAACI,EAAT;AAHU,OAAxB;AAKAT,MAAAA,aAAa,CAACM,WAAD,CAAb,GAA6BE,eAA7B,CAP4C,CAS9C;AACC,KAVD,MAUO;AACLR,MAAAA,aAAa,CAACM,WAAD,CAAb,CAA2BK,UAA3B,CAAsCC,IAAtC,CAA2CP,OAAO,CAACI,EAAnD;AACD;AACF,GApBD;AAsBA,SAAOT,aAAP;AACD,CAzBM","sourcesContent":["import {\n  Program,\n  ProgramDictionary,\n  ProgramGroupDictionary,\n} from \"../../../shared/types\";\n\n/*\n * Creates a data structure that groups programs together.\n * */\nexport const createProgramGroupDictionary = (hsPrograms: ProgramDictionary): ProgramGroupDictionary => {\n  let programGroups: ProgramGroupDictionary = {};\n  Object.keys(hsPrograms).forEach( programID => {\n    \n    const program: Program = hsPrograms[programID];\n    const programType = program.programType;\n\n    // if this program group does not already exist, \n    // create a new program group and add it to the program group dict.\n    if (programGroups[programType] === undefined) {\n\n      const newProgramGroup = {\n        id: programType,\n        name: programType,\n        programIDs: [program.id]\n      };\n      programGroups[programType] = newProgramGroup;\n\n    // otherwise, add this program's id to the existing group.\n    } else {\n      programGroups[programType].programIDs.push(program.id);\n    }\n  });\n\n  return programGroups;\n};\n"]},"metadata":{},"sourceType":"module"}