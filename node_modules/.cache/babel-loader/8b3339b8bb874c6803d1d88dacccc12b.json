{"ast":null,"code":"import pointInPolygon from \"../../../../shared/util/point-in-polygon\";\nexport var createIfInAttendBound = function createIfInAttendBound(getAttendBoundDict) {\n  return function (student, program) {\n    // return false immediately if student properties are uninitialized\n    if (student.geo === null) {\n      return false;\n    }\n\n    var point = [student.geo.longitude, student.geo.latitude]; // get geometry from schoolAttendBoundTable by looking up thru ID\n\n    var polygon = getAttendBoundDict()[program.schoolID];\n\n    if (polygon === undefined) {\n      console.warn(\"No attend bound found for \".concat(program.programName));\n      return false;\n    }\n\n    return pointInPolygon(point, polygon);\n  };\n};","map":{"version":3,"sources":["/home/michael/code/chavez-hs-planner/src/shared/requirement-functions/requirement-function-builders/filters/if-in-attend-bound.ts"],"names":["pointInPolygon","createIfInAttendBound","getAttendBoundDict","student","program","geo","point","longitude","latitude","polygon","schoolID","undefined","console","warn","programName"],"mappings":"AAKA,OAAOA,cAAP,MAA2B,0CAA3B;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,kBAAD;AAAA,SAAyE,UAACC,OAAD,EAAUC,OAAV,EAAsB;AAClI;AACA,QAAID,OAAO,CAACE,GAAR,KAAgB,IAApB,EAA0B;AACxB,aAAO,KAAP;AACD;;AAED,QAAMC,KAAuB,GAAG,CAACH,OAAO,CAACE,GAAR,CAAYE,SAAb,EAAwBJ,OAAO,CAACE,GAAR,CAAYG,QAApC,CAAhC,CANkI,CAOlI;;AACA,QAAMC,OAAO,GAAGP,kBAAkB,GAAGE,OAAO,CAACM,QAAX,CAAlC;;AACA,QAAID,OAAO,KAAKE,SAAhB,EAA2B;AACzBC,MAAAA,OAAO,CAACC,IAAR,qCAA0CT,OAAO,CAACU,WAAlD;AACA,aAAO,KAAP;AACD;;AAED,WAAOd,cAAc,CAACM,KAAD,EAAQG,OAAR,CAArB;AACD,GAfoC;AAAA,CAA9B","sourcesContent":["import { \n  ReqFnFilter,\n  AttendanceBoundaryDictionary\n} from \"../../../../shared/types\";\n\nimport pointInPolygon from \"../../../../shared/util/point-in-polygon\";\n\nexport const createIfInAttendBound = (getAttendBoundDict: () => AttendanceBoundaryDictionary): ReqFnFilter => (student, program) => {\n  // return false immediately if student properties are uninitialized\n  if (student.geo === null) {\n    return false;\n  }\n\n  const point: [number, number] = [student.geo.longitude, student.geo.latitude];\n  // get geometry from schoolAttendBoundTable by looking up thru ID\n  const polygon = getAttendBoundDict()[program.schoolID];\n  if (polygon === undefined) {\n    console.warn(`No attend bound found for ${program.programName}`);\n    return false;\n  }\n\n  return pointInPolygon(point, polygon);\n};\n"]},"metadata":{},"sourceType":"module"}