{"ast":null,"code":"import { SuccessChance } from \"../../../shared/enums\";\nimport { POINT_SYSTEM_UNCERTAINTY_THRESHOLD } from \"../constants\";\nexport var pointSystem = function pointSystem(calc, lookup) {\n  return function (student, program) {\n    var points = calc(student, program); // point calculator may return null if called with uninitialized\n    // student data; in that case, return NOTIMPLEMENTED as a default\n\n    if (points === null) {\n      return SuccessChance.NOTIMPLEMENTED;\n    }\n\n    var cutoff;\n\n    try {\n      cutoff = lookup(student, program);\n    } catch (e) {\n      // if cutoff not found, return NOTIMPLEMENTED\n      console.error(e);\n      return SuccessChance.NOTIMPLEMENTED;\n    }\n\n    var pointsFromCutoff = points - cutoff.min; // handle failure by returning NOTIMPLEMENTED\n    // rather than give inaccurate prediction\n\n    if (isNaN(points) || isNaN(cutoff.min)) {\n      return SuccessChance.NOTIMPLEMENTED;\n    }\n\n    if (pointsFromCutoff < 0) {\n      return SuccessChance.NONE;\n    } else if (pointsFromCutoff <= POINT_SYSTEM_UNCERTAINTY_THRESHOLD) {\n      return SuccessChance.LIKELY;\n    } else {\n      return SuccessChance.CERTAIN;\n    }\n  };\n};","map":{"version":3,"sources":["/home/michael/code/chavez-hs-planner/src/shared/requirement-functions/requirement-function-builders/point-system.ts"],"names":["SuccessChance","POINT_SYSTEM_UNCERTAINTY_THRESHOLD","pointSystem","calc","lookup","student","program","points","NOTIMPLEMENTED","cutoff","e","console","error","pointsFromCutoff","min","isNaN","NONE","LIKELY","CERTAIN"],"mappings":"AAOA,SAASA,aAAT,QAA8B,uBAA9B;AACA,SAASC,kCAAT,QAAmD,cAAnD;AAOA,OAAO,IAAMC,WAA0B,GAAG,SAA7BA,WAA6B,CAACC,IAAD,EAAOC,MAAP,EAAkB;AAC1D,SAAO,UAACC,OAAD,EAAUC,OAAV,EAAsB;AAE3B,QAAMC,MAAM,GAAGJ,IAAI,CAACE,OAAD,EAAUC,OAAV,CAAnB,CAF2B,CAG3B;AACA;;AACA,QAAIC,MAAM,KAAK,IAAf,EAAqB;AACnB,aAAOP,aAAa,CAACQ,cAArB;AACD;;AACD,QAAIC,MAAJ;;AACA,QAAI;AACFA,MAAAA,MAAM,GAAGL,MAAM,CAACC,OAAD,EAAUC,OAAV,CAAf;AACD,KAFD,CAEE,OAAMI,CAAN,EAAS;AACT;AACAC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,aAAOV,aAAa,CAACQ,cAArB;AACD;;AACD,QAAMK,gBAAgB,GAAGN,MAAM,GAAGE,MAAM,CAACK,GAAzC,CAhB2B,CAkB3B;AACA;;AACA,QAAIC,KAAK,CAACR,MAAD,CAAL,IAAiBQ,KAAK,CAACN,MAAM,CAACK,GAAR,CAA1B,EAAwC;AACtC,aAAOd,aAAa,CAACQ,cAArB;AACD;;AAED,QAAIK,gBAAgB,GAAG,CAAvB,EAA0B;AACxB,aAAOb,aAAa,CAACgB,IAArB;AACD,KAFD,MAEO,IAAIH,gBAAgB,IAAIZ,kCAAxB,EAA4D;AACjE,aAAOD,aAAa,CAACiB,MAArB;AACD,KAFM,MAEA;AACL,aAAOjB,aAAa,CAACkB,OAArB;AACD;AACF,GA/BD;AAgCD,CAjCM","sourcesContent":["import {\n  CutoffScores,\n  Program,\n  RequirementFunction,\n  StudentData,\n} from \"../../../shared/types\";\n\nimport { SuccessChance } from \"../../../shared/enums\";\nimport { POINT_SYSTEM_UNCERTAINTY_THRESHOLD } from \"../constants\";\n\ntype PointCalculator = (student: StudentData, program: Program) => number | null;\ntype PointCutoffLookup = (student: StudentData, program: Program) => CutoffScores;\n\ntype PointSystemFn = (calc: PointCalculator, lookup: PointCutoffLookup) => RequirementFunction;\n\nexport const pointSystem: PointSystemFn = (calc, lookup) => {\n  return (student, program) => {\n\n    const points = calc(student, program);\n    // point calculator may return null if called with uninitialized\n    // student data; in that case, return NOTIMPLEMENTED as a default\n    if (points === null) {\n      return SuccessChance.NOTIMPLEMENTED;\n    }\n    let cutoff;\n    try {\n      cutoff = lookup(student, program);\n    } catch(e) {\n      // if cutoff not found, return NOTIMPLEMENTED\n      console.error(e);\n      return SuccessChance.NOTIMPLEMENTED;\n    }\n    const pointsFromCutoff = points - cutoff.min;\n\n    // handle failure by returning NOTIMPLEMENTED\n    // rather than give inaccurate prediction\n    if (isNaN(points) || isNaN(cutoff.min)) {\n      return SuccessChance.NOTIMPLEMENTED;\n    }\n\n    if (pointsFromCutoff < 0) {\n      return SuccessChance.NONE;\n    } else if (pointsFromCutoff <= POINT_SYSTEM_UNCERTAINTY_THRESHOLD) {\n      return SuccessChance.LIKELY;\n    } else {\n      return SuccessChance.CERTAIN;\n    }\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}